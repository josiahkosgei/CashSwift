// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace CashSwift.Finacle.Integration.DataAccess.Entities
{
    /// <summary>
    /// store a CIT transaction
    /// </summary>
    [Table("CIT")]
    [Index("auth_user", Name = "iauth_user_CIT")]
    [Index("device_id", Name = "idevice_id_CIT")]
    [Index("start_user", Name = "istart_user_CIT")]
    public partial class CIT
    {
        public CIT()
        {
            CITDenominations = new HashSet<CITDenomination>();
            CITPrintouts = new HashSet<CITPrintout>();
            CITTransactions = new HashSet<CITTransaction>();
            Transactions = new HashSet<Transaction>();
        }

        [Key]
        public Guid id { get; set; }
        /// <summary>
        /// Device that conducted the CIT
        /// </summary>
        public Guid device_id { get; set; }
        /// <summary>
        /// Datetime of the CIT
        /// </summary>
        public DateTime cit_date { get; set; }
        /// <summary>
        /// Datetime when the CIT was completed
        /// </summary>
        public DateTime? cit_complete_date { get; set; }
        /// <summary>
        /// ApplicationUser who initiated the CIT
        /// </summary>
        public Guid start_user { get; set; }
        /// <summary>
        /// Application User who authorised the CIT event
        /// </summary>
        public Guid? auth_user { get; set; }
        /// <summary>
        /// The datetime from which the CIT calculations will be carrid out
        /// </summary>
        public DateTime? fromDate { get; set; }
        /// <summary>
        /// The datetime until which the CIT calculations will be carrid out
        /// </summary>
        public DateTime toDate { get; set; }
        /// <summary>
        /// The asset number of the Bag that was removed i.e. the full bag
        /// </summary>
        [StringLength(50)]
        public string old_bag_number { get; set; }
        /// <summary>
        /// The asset number of the empty bag that was inserted
        /// </summary>
        [StringLength(50)]
        public string new_bag_number { get; set; }
        /// <summary>
        /// The numbr on the tamper evident seal tag used to seal the bag
        /// </summary>
        [StringLength(50)]
        public string seal_number { get; set; }
        /// <summary>
        /// Has the CIT been completed, used for calculating incomplete CITs
        /// </summary>
        public bool complete { get; set; }
        /// <summary>
        /// The error code encountered during CIT
        /// </summary>
        public int cit_error { get; set; }
        /// <summary>
        /// Error message encounterd during CIT
        /// </summary>
        [StringLength(255)]
        public string cit_error_message { get; set; }

        [ForeignKey("auth_user")]
        [InverseProperty("CITauth_userNavigations")]
        public virtual ApplicationUser auth_userNavigation { get; set; }
        [ForeignKey("device_id")]
        [InverseProperty("CITs")]
        public virtual Device device { get; set; }
        [ForeignKey("start_user")]
        [InverseProperty("CITstart_userNavigations")]
        public virtual ApplicationUser start_userNavigation { get; set; }
        [InverseProperty("cit")]
        public virtual ICollection<CITDenomination> CITDenominations { get; set; }
        [InverseProperty("cit")]
        public virtual ICollection<CITPrintout> CITPrintouts { get; set; }
        [InverseProperty("cit")]
        public virtual ICollection<CITTransaction> CITTransactions { get; set; }
        [InverseProperty("cit")]
        public virtual ICollection<Transaction> Transactions { get; set; }
    }
}