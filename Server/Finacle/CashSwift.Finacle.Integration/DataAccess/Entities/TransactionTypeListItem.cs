// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace CashSwift.Finacle.Integration.DataAccess.Entities
{
    /// <summary>
    /// Transactions that the system can perform e.g. regular deposit, Mpesa deposit, etc
    /// </summary>
    [Table("TransactionTypeListItem")]
    [Index("account_permission", Name = "iaccount_permission_TransactionTypeListItem")]
    [Index("default_account_currency", Name = "idefault_account_currency_TransactionTypeListItem")]
    [Index("tx_limit_list", Name = "itx_limit_list_TransactionTypeListItem")]
    [Index("tx_text", Name = "itx_text_TransactionTypeListItem")]
    [Index("tx_type", Name = "itx_type_TransactionTypeListItem")]
    [Index("tx_type_guiscreenlist", Name = "itx_type_guiscreenlist_TransactionTypeListItem")]
    public partial class TransactionTypeListItem
    {
        public TransactionTypeListItem()
        {
            TransactionTypeList_TransactionTypeListItems = new HashSet<TransactionTypeList_TransactionTypeListItem>();
            Transactions = new HashSet<Transaction>();
        }

        [Key]
        public int id { get; set; }
        /// <summary>
        /// common name for the transaction e.g. Mpesa Deposit
        /// </summary>
        [Required]
        [StringLength(50)]
        public string name { get; set; }
        /// <summary>
        /// common description for the transaction type
        /// </summary>
        [StringLength(255)]
        public string description { get; set; }
        public bool validate_reference_account { get; set; }
        /// <summary>
        /// the default account that pre-polulates the AccountNumber of a transaction
        /// </summary>
        [StringLength(50)]
        public string default_account { get; set; }
        [StringLength(50)]
        public string default_account_name { get; set; }
        [Required]
        [StringLength(3)]
        [Unicode(false)]
        public string default_account_currency { get; set; }
        public bool validate_default_account { get; set; }
        [Required]
        public bool? enabled { get; set; }
        public int tx_type { get; set; }
        public int tx_type_guiscreenlist { get; set; }
        /// <summary>
        /// A string passed to core banking with transaction details so core banking can route the deposit to the correct handler
        /// </summary>
        [StringLength(50)]
        public string cb_tx_type { get; set; }
        [StringLength(50)]
        public string username { get; set; }
        public string password { get; set; }
        public byte[] Icon { get; set; }
        public Guid? tx_limit_list { get; set; }
        public Guid? tx_text { get; set; }
        public Guid? account_permission { get; set; }
        public bool init_user_required { get; set; }
        public bool auth_user_required { get; set; }

        [ForeignKey("account_permission")]
        [InverseProperty("TransactionTypeListItems")]
        public virtual AccountPermission account_permissionNavigation { get; set; }
        [ForeignKey("default_account_currency")]
        [InverseProperty("TransactionTypeListItems")]
        public virtual Currency default_account_currencyNavigation { get; set; }
        [ForeignKey("tx_limit_list")]
        [InverseProperty("TransactionTypeListItems")]
        public virtual TransactionLimitList tx_limit_listNavigation { get; set; }
        [ForeignKey("tx_text")]
        [InverseProperty("TransactionTypeListItems")]
        public virtual TransactionText tx_textNavigation { get; set; }
        [ForeignKey("tx_type")]
        [InverseProperty("TransactionTypeListItems")]
        public virtual TransactionType tx_typeNavigation { get; set; }
        [ForeignKey("tx_type_guiscreenlist")]
        [InverseProperty("TransactionTypeListItems")]
        public virtual GUIScreenList tx_type_guiscreenlistNavigation { get; set; }
        [InverseProperty("tx_typeNavigation")]
        public virtual AccountPermission AccountPermission { get; set; }
        [InverseProperty("tx_itemNavigation")]
        public virtual TransactionText TransactionText { get; set; }
        [InverseProperty("txtype_list_itemNavigation")]
        public virtual ICollection<TransactionTypeList_TransactionTypeListItem> TransactionTypeList_TransactionTypeListItems { get; set; }
        [InverseProperty("tx_typeNavigation")]
        public virtual ICollection<Transaction> Transactions { get; set; }
    }
}